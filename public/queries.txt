
CREATE DATABASE task_management;
USE task_management;


CREATE TABLE tasks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    completed BOOLEAN NOT NULL DEFAULT 0,
    due_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO tasks (title, description, completed, due_date)
VALUES
('Buy groceries', 'Milk, Bread, Eggs, and Fruits', 0, '2025-06-01'),
('Finish project report', 'Complete the final draft and send to manager', 1, '2025-05-30'),
('Call plumber', 'Fix the kitchen sink leakage', 0, '2025-06-02');

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO users (name, email, password_hash)
VALUES
('Alice Smith', 'alice@example.com', 'hashedpassword1'),
('Bob Johnson', 'bob@example.com', 'hashedpassword2');



CREATE TABLE tags (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

INSERT INTO tags (name)
VALUES
('Work'),
('Personal'),
('Urgent');


--task_tags (for many-to-many relationship between tasks and tags)
CREATE TABLE task_tags (
    task_id INT NOT NULL,
    tag_id INT NOT NULL,
    PRIMARY KEY (task_id, tag_id),
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

INSERT INTO task_tags (task_id, tag_id)
VALUES
(1, 1),
(1, 3),
(2, 1),
(3, 2);



CREATE TABLE comments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    task_id INT NOT NULL,
    user_id INT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

INSERT INTO comments (task_id, user_id, content)
VALUES
(1, 1, 'Remember to buy organic products.'),
(2, 2, 'Report draft looks good!'),
(3, 1, 'Plumber will arrive at 3 PM.');


--task_assignments (if tasks can be assigned to multiple users)
CREATE TABLE task_assignments (
    task_id INT NOT NULL,
    user_id INT NOT NULL,
    PRIMARY KEY (task_id, user_id),
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

INSERT INTO task_assignments (task_id, user_id)
VALUES
(1, 1),
(2, 2),
(3, 1),
(3, 2);